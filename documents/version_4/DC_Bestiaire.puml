@startuml



    /'interface Jeu {
            +update(double secondes, Clavier clavier) : void
            +etreFini() : boolean
    }'/

    /'class Main {
        +{static} main(String[] args) : void
    }'/

    /'class MainLaby {
        +{static} main(String[] args) : void
    }'/

    /'class LabyJeu {
        '+laby : Labyrinthe
        +perso : Personnage
        +monstre : Personnage
        +LabyJeu():
        +LabyJeu(String):
        +update(double secondes, Clavier clavier) : void
        +init() : void
        +etreFini() : boolean
    }'/

    /'class LabyDessin {
        +dessinerJeu(Jeu jeu, Canvas canvas) : void
    }'/

    class Labyrinthe {
        /'
        +{static} MUR : char = 'X'
        +{static} PJ : char = 'P'
        +{static} M : char = 'M'
        +{static} VIDE : char = '.'
        +{static} HAUT : String = "Haut"
        +{static} BAS : String = "Bas"
        +{static} GAUCHE : String = "Gauche"
        +{static} DROITE : String = "Droite"
        '/
        +murs : boolean[][]
        +Labyrinthe(String nom)
        +{static} getSuivant(int x, int y, String action) : int[]
        +etreFini() : boolean
        +getLengthY() : int
        +getLength() : int
        +getMur(int x, int y) : boolean
    }

    class Bestiaire {

    }

    abstract class Personnage {
        x: int
        y: int
        +Personnage(int dx, int dy)
        +setLaby(Labyrinthe): void
        +{abstract} deplacer(String action) : void
        +getX() int
        +getY() int
        +etrePresent(int dx, int dy) boolean
    }


    class Heros {
        + amulettePossedee : boolean
        +Heros(int dx, int dy)
        +deplacer(String action) : void
    }

    class Monstre {
        +Monstre(int dx, int dy)
        +deplacer(String action) : void
    }

    class Fantomes{
    }

    class Objet{
        x: int
        y: int
        +Objet(int dx, int dy)
        +setLaby(Labyrinthe): void
        +getX() int
        +getY() int
        +etrePresent(int dx, int dy) boolean
    }

    class Amulette{
        Amulette(int,int)
    }


package "moteurJeu" {
    interface Jeu {
        +update(double secondes, Clavier clavier) : void
        +etreFini() : boolean
    }

    interface DessinJeu {
        +dessinerJeu(Jeu jeu, Canvas canvas) : void
    }

    class Clavier {
        +bas : boolean
        +haut : boolean
        +gauche : boolean
        +droite : boolean
    }

    class MoteurJeu {
        +{static} setTaille(int width, int height) : void
        +{static} setFPS(int fps) : void
        +{static} launch(Jeu jeu, DessinJeu dessin) : void
    }
}

' Relations
/'Jeu <|.. LabyJeu
DessinJeu <|.. LabyDessin

Labyrinthe --> Monstre
Labyrinthe --> Heros


LabyJeu --> Labyrinthe : contains
Personnage <|-- Heros
Personnage <|-- Monstre
Labyrinthe --> Personnage


Main ..> Labyrinthe : uses
MainLaby ..> LabyJeu : creates
MainLaby ..> LabyDessin : creates
MainLaby ..> MoteurJeu : uses

LabyJeu ..> Clavier : uses
LabyDessin ..> LabyJeu : uses
'/

Labyrinthe "1" --> "1" Bestiaire
Labyrinthe "1" --> "1" Monstre : monstre
Labyrinthe "1" --> "1" Heros : pj
Labyrinthe "1" --> "1" Amulette : amu

Personnage <|-- Heros
Personnage <|-- Monstre
Monstre <|-- Fantomes
Objet <|-- Amulette



remove moteurJeu

@enduml
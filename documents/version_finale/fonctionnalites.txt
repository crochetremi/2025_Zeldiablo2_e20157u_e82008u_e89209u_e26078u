
////////// Fonctionnalités version 2 \\\\\\\\\\

1. Donner une position initiale au monstre
- Descriptif :
  - le monstre débute sur une case décrite dans le fichier labyrinthe.
- Critères de validation :
  - le monstre doit avoir une position initiale.
  - le monstre se trouve sur la case indiquée dans le fichier labyrinthe.
  - le monstre est représenté par le caractère 'M' dans le fichier labyrinthe.
  - le monstre ne se trouve pas sur la même case que le personnage.
// Fait par rémi

2. Afficher le monstre
- Descriptif :
  - le jeu doit afficher le monstre à sa position.
- Critères de validation :
  - le monstre doit être affiché à la bonne position dans le labyrinthe.
  - le monstre sera représenté sous la forme d'un cercle violet de la taille du personnage.
// fait par rémi

3. Considérer le monstre dans les déplacements du personnage
- Descriptif :
  - lorsque le jeu évolue, le personnage ne peut pas se déplacer sur la case du monstre.
- Critères de validation :
  - le monstre constitue un obstacle pour le personnage.
  - le monstre et le personnage ne peuvent pas se trouver sur la même case.
  - le personnage ne peut pas traverser la case du monstre
// fait par rémi

4. Déplacer le monstre (optionnel en fonction avancée)
- Descriptif :
  - lorsque le jeu évolue, le monstre choisit une case adjacente de manière aléatoire et tente de s'y déplacer.
- Critères de validation :
  - le monstre doit se déplacer sur une case adjacente. Il considère les 4 directions de déplacement possibles.
  - le monstre ne peut pas se déplacer sur mur. S'il tente de se déplacer sur cette case, il ne bouge pas.
  - le monstre ne peut pas se trouver sur la même case que le personnage.
// fait par rémi

////////// Fonctionnalités version 3 \\\\\\\\\\

1. Monstres attirés par le héros
- Descriptif : A chaque fois que les monstres se déplacent, les monstres tentent de réduire leur
distance à vol d'oiseau par rapport au héros.
- Critères de validation
    • Après son déplacement, un monstre doit être plus proche du héros qu'avant son
déplacement (distance de Manhattan sans prise en compte des murs).
    • Les monstres soumis aux obstacles peuvent se retrouver bloqués dans des cul-desac.

// diagramme de séquence fait par tout le groupe
// code fait par Maël et Rémi


2. Attaque des monstres
- Descriptif : Lorsqu'un monstre doit agir, si le monstre se trouve à coté du héros, alors il ne se
déplace pas mais il attaque celui-ci.
- Critères de validation
    • Lorsque le monstre est à côté du joueur, il attaque et ne se déplace pas. Par défaut,
le Héros perd 1 point de vie.
    • Lorsque le monstre est loin du joueur, il n'attaque pas mais se déplace.

// diagramme de séquence fait par tout le groupe
// code fait par Erdal

////////// Fonctionnalités version 4 \\\\\\\\\\

1. Fin du jeu : mort du héros
- Descriptif : Lorsque le héros n'a plus de points de vie, le jeu s'arrête et la partie est perdue.
-Critères de validation :
    • Le héros par défaut dispose de 5 points de vie.
    • Chaque monstre fait 1 point de dégât lorsque le héros se fait attaquer.
    • Quand le héros meurt, un message de finn est affiché sur la console et le jeu s'arrête.

// diagramme fait par Rémi et Maël
// code fait par Erdal


2. Mise en place de l'amulette
- Descriptif :
Au lancement du jeu, une amulette est placée sur une case vide du labyrinthe. Le placement de l'amulette est toujours le même et dépend du niveau.
-Critères de validation
   • L'amulette ne peut être placée que sur une case vide.
   • Les monstres et le héros peuvent se situer sur la case de l'amulette.
   • L'amulette est affichée dans le jeu sous la forme d'un cercle jaune sur la case vide où elle se trouve
    // diagramme fait par Rémi
   // code fait par Rémi


3. Acquisition de l'amulette
-Descriptif : Dés que le joueur demande à déplacer le héros sur l'amulette, le héros se déplace et prend l'amulette.
-Critères de validation:
• L'amulette n'est plus sur le plateau (et n'est plus affichée).
• Le Héros possède l'amulette.
• Un monstre ne récupère pas l'amulette
//Diagramme et code fait par Rémi

4. Fin du jeu : Victoire du Héros
-Descriptif : Une fois que le héros a pris l'amulette, il peut retourner à l'entrée du labyrinthe et
remporter le jeu.
-Critères de validation:
• Lorsque le héros possède l'amulette et qu'il retourne à l'entrée du labyrinthe, le
jeu s'arrête et un message est aché dans la console.
• Lorsque le héros ne possède pas l'amulette, le jeu ne s'arrête pas même si le héros
retourne à l'entrée.
// code fait par Rémi et Erdal


5. Fantômes
// Diagrammes et code fait par Luca, mais le code n'a pas été gardé, cependant il nous a permis de développer Bestiaire, qui nous permet
de gérer plusieurs monstres.

////////// Fonctionnalités version finale \\\\\\\\\\

1. Monstres au comportement intelligent
A chaque fois que les monstres se déplacent, ils se rapprochent dans la direction du
héros en prenant en compte la présence des murs.
Critères de validation
• Avant son déplacement, le monstre détermine le meilleur chemin pour atteindre
le héros.
• Le monstre prend en compte les obstacles qui le concernent pour trouver le meilleur
chemin.
• lorsqu'il se déplace, le monstre suit effectivement le meilleur chemin et parvient
jusqu'au héros même s'il y a des obstacles.

// code et diagramme faits par Maël
